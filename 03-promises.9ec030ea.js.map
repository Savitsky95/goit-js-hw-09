{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,mBACtBD,SAASC,cAAc,UAiC/BG,iBAAiB,SAhB3B,SAA4BC,G,kBAOxB,IAAMC,EAAWC,GAtBrB,SAAuBD,EAAUE,EAAOC,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAYR,GAASF,EAAW,GAAKG,EAE3CQ,YAAW,WACLJ,EACFF,EAAQO,EAAArB,GAASsB,OAAOC,QAAQ,qBAAoCC,OAAff,EAAS,QAAgBe,OAAVL,EAAU,SAE9EJ,EAAOM,EAAArB,GAASsB,OAAOG,QAAQ,oBAAmCD,OAAff,EAAS,QAAgBe,OAAVL,EAAU,Q,GAE7EA,E,KAYHO,CAAcjB,EAAUE,EAAOC,GAC5Be,MAAK,WACJC,QAAQC,IAAI,qBAAoCL,OAAff,EAAS,QAAoCe,OAA9Bb,GAASF,EAAW,GAAKG,EAAK,O,IAC7EkB,OAAM,WACPF,QAAQC,IAAI,oBAAmCL,OAAff,EAAS,QAAoCe,OAA9Bb,GAASF,EAAW,GAAKG,EAAK,O,KAXnFJ,EAAIuB,iBAKJ,IAJA,IAAMpB,EAAQqB,OAAO9B,EAAa+B,OAC5BrB,EAAOoB,OAAO3B,EAAY4B,OAC1BC,EAASF,OAAO1B,EAAS2B,OAEtBE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepDelayEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst submitBtn = document.querySelector('button');\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timeDelay = delay + (position - 1) * step;\n  \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`Fulfilled promise ${position} in ${timeDelay} ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`Rejected promise ${position} in ${timeDelay} ms`));\n      }\n    }, timeDelay);\n  });\n};\n\nfunction onCreatePromiseBtn(evt) {\n  evt.preventDefault();\n  const delay = Number(firstDelayEl.value);\n  const step = Number(stepDelayEl.value);\n  const amount = Number(amountEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    createPromise(position, delay, step)\n      .then(() => {\n        console.log(`Fulfilled promise ${position} in ${delay + (position - 1) * step} ms`);\n      }).catch(() => {\n        console.log(`Rejected promise ${position} in ${delay + (position - 1) * step} ms`);\n      });\n  }\n};\nsubmitBtn.addEventListener('click', onCreatePromiseBtn);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelayEl","document","querySelector","$ce04d3a99e08e73b$var$stepDelayEl","$ce04d3a99e08e73b$var$amountEl","addEventListener","evt","position","i","delay","step","Promise","resolve","reject","shouldResolve","Math","random","timeDelay","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise","then","console","log","catch","preventDefault","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.9ec030ea.js.map"}