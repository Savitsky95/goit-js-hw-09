{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,kBACtCC,EAAcF,SAASC,cAAc,iBACrCE,EAAWH,SAASC,cAAc,mBAGxC,SAASG,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAYR,GAASD,EAAW,GAAKE,EAE3CQ,YAAW,KACLJ,EACFF,EAAQO,EAAAnB,GAASoB,OAAOC,QAAQ,qBAAqBb,QAAeS,SAEpEJ,EAAOM,EAAAnB,GAASoB,OAAOE,QAAQ,oBAAoBd,QAAeS,QAAgB,GAEnFA,EAAU,G,CAbCd,SAASC,cAAc,UAiC/BmB,iBAAiB,SAhB3B,SAA4BC,GAC1BA,EAAIC,iBACJ,MAAMhB,EAAQiB,OAAOxB,EAAayB,OAC5BjB,EAAOgB,OAAOrB,EAAYsB,OAC1BC,EAASF,OAAOpB,EAASqB,OAE/B,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CACnC,MAAMrB,EAAWqB,EACjBtB,EAAcC,EAAUC,EAAOC,GAC5BoB,MAAK,KACJC,QAAQC,IAAI,qBAAqBxB,QAAeC,GAASD,EAAW,GAAKE,OAAU,IAClFuB,OAAM,KACPF,QAAQC,IAAI,oBAAoBxB,QAAeC,GAASD,EAAW,GAAKE,OAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayEl = document.querySelector('[name=\"delay\"]');\nconst stepDelayEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst submitBtn = document.querySelector('button');\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timeDelay = delay + (position - 1) * step;\n  \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(Notiflix.Notify.success(`Fulfilled promise ${position} in ${timeDelay} ms`));\n      } else {\n        reject(Notiflix.Notify.failure(`Rejected promise ${position} in ${timeDelay} ms`));\n      }\n    }, timeDelay);\n  });\n};\n\nfunction onCreatePromiseBtn(evt) {\n  evt.preventDefault();\n  const delay = Number(firstDelayEl.value);\n  const step = Number(stepDelayEl.value);\n  const amount = Number(amountEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    createPromise(position, delay, step)\n      .then(() => {\n        console.log(`Fulfilled promise ${position} in ${delay + (position - 1) * step} ms`);\n      }).catch(() => {\n        console.log(`Rejected promise ${position} in ${delay + (position - 1) * step} ms`);\n      });\n  }\n};\nsubmitBtn.addEventListener('click', onCreatePromiseBtn);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelayEl","document","querySelector","$47d4ff9957288465$var$stepDelayEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","timeDelay","setTimeout","$parcel$interopDefault","Notify","success","failure","addEventListener","evt","preventDefault","Number","value","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.df1beb78.js.map"}